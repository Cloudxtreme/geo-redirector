map $arg_video_uri $cr_classic {
    default 1;
    ""      0;
}
map $cr_classic $balance_factor {
    0       $uri;
    1       $arg_video_uri;
}

lua_shared_dict disabled_nodes 1m;
limit_req_zone $balance_factor zone=rr:300m rate=25r/m;
init_by_lua_file /etc/nginx/init.lua;

geo $dest_group {
    default             main;
    100.64.0.0/10       ufa;
    136.169.128.0/17    ufa;
    145.255.0.0/19      ufa;
    46.191.128.0/17     ufa;
    77.79.128.0/18      ufa;
    79.140.16.0/20      ufa;
    81.30.176.0/20      ufa;
    81.30.192.0/19      ufa;
    84.39.240.0/20      ufa;
    89.189.128.0/18     ufa;
    92.50.128.0/17      ufa;
    94.41.0.0/16        ufa;
    95.105.0.0/17       ufa;
}

server {
    listen 80;
    listen 8100;
    listen 8123;
    listen 443 ssl;
    ssl_certificate /etc/nginx/ssl/tvigle_ru_2016_02_26.crt;
    ssl_certificate_key /etc/nginx/ssl/pk2014.key;
    lua_use_default_type off;

    include /etc/nginx/conf.d/antiseo.conf;
    server_name  distribution.tvigle.ru video.tvigle.ru;

    access_log  /var/log/nginx/distribution.access.log custom buffer=128k; 
    error_log  /var/log/nginx/distribution.error.log; 
    log_not_found off;
    
    location = /favicon.ico { return 404; }    

    location = /crossdomain.xml {
        root /var/www/tvigo.ru;
        access_log off;
    }

    location / {
        error_page 418 = @wrr_balance;
        limit_req zone=rr nodelay;
        limit_req_status 418;
        content_by_lua_file /etc/nginx/balance_sharded.lua;
    }
    location @wrr_balance {
        content_by_lua_file /etc/nginx/balance_wrr.lua;
    }

    location = /force_check {
        default_type text/plain;
        set $qhost "";
        set $quri "";
        content_by_lua '
            query_http()
            for _, v in ipairs(ngx.shared.disabled_nodes:get_keys()) do
                ngx.say( ("Disabled: %s"):format(v) )
            end
        ';
    }

    location = /get_blocked {
        default_type text/plain;
        set $qhost "";
        set $quri "";
        content_by_lua '
            for _, v in ipairs(ngx.shared.disabled_nodes:get_keys()) do
                ngx.say( ("Disabled: %s"):format(v) )
            end
        ';
    }

	location = /query_one {
            proxy_ignore_client_abort on;
            proxy_connect_timeout   1000ms;
            proxy_read_timeout      1000ms;    
            rewrite ^ $quri break;
            proxy_pass http://$qhost;
        }
}
